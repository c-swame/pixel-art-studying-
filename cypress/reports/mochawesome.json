{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2021-11-26T04:19:43.598Z",
    "end": "2021-11-26T04:20:45.405Z",
    "duration": 61807,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fb437fda-bfa7-4045-932e-418fb7cc1177",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4bd009d5-3528-4dbd-a3cc-aaf45c932c1e",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "35e9f7f3-bdc9-4c99-8cec-cfa7709355d1",
              "parentUUID": "4bd009d5-3528-4dbd-a3cc-aaf45c932c1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35e9f7f3-bdc9-4c99-8cec-cfa7709355d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "6df8fdd1-e8a2-45bb-a297-2751349367cf",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f70eb713-fb19-4428-b913-8a6763236439",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "19130d72-7374-4ba6-a963-8fcb3a0e726b",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "42e70db5-12c0-46f9-9b9a-759d9b6697be",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6d4884a8-b228-4265-ba0c-3145e1078e87",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "0608e2dd-09fa-4cf3-a8b7-74d4673593d8",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "27c7b63f-6825-41d0-9933-0b6f3a622680",
              "parentUUID": "80a4acc1-d6d0-45ec-9a8a-b301b555005d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6df8fdd1-e8a2-45bb-a297-2751349367cf",
            "f70eb713-fb19-4428-b913-8a6763236439",
            "19130d72-7374-4ba6-a963-8fcb3a0e726b",
            "42e70db5-12c0-46f9-9b9a-759d9b6697be",
            "6d4884a8-b228-4265-ba0c-3145e1078e87",
            "0608e2dd-09fa-4cf3-a8b7-74d4673593d8",
            "27c7b63f-6825-41d0-9933-0b6f3a622680"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 951,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5fe49e5-a94f-4db5-9ee0-3fe2f25c6526",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3fea3d96-6d11-467d-bd68-b394d4a703ec",
              "parentUUID": "f5fe49e5-a94f-4db5-9ee0-3fe2f25c6526",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "75e7e1a3-c31d-4548-96ab-bfc31f0c3858",
              "parentUUID": "f5fe49e5-a94f-4db5-9ee0-3fe2f25c6526",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fea3d96-6d11-467d-bd68-b394d4a703ec",
            "75e7e1a3-c31d-4548-96ab-bfc31f0c3858"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f6997da-a1aa-4206-bad2-e6a461a8f237",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "1f441c53-a016-486e-b464-e0bb268b4fa5",
              "parentUUID": "0f6997da-a1aa-4206-bad2-e6a461a8f237",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e038e02b-5f0c-4fcb-9405-09695da51e7f",
              "parentUUID": "0f6997da-a1aa-4206-bad2-e6a461a8f237",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "bac6af03-06c2-41f7-8d0b-e3db0cb6e5d9",
              "parentUUID": "0f6997da-a1aa-4206-bad2-e6a461a8f237",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6da59155-e66f-4a61-b7df-9a420ddf255a",
              "parentUUID": "0f6997da-a1aa-4206-bad2-e6a461a8f237",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f441c53-a016-486e-b464-e0bb268b4fa5",
            "e038e02b-5f0c-4fcb-9405-09695da51e7f",
            "bac6af03-06c2-41f7-8d0b-e3db0cb6e5d9",
            "6da59155-e66f-4a61-b7df-9a420ddf255a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 480,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "261f19a9-bacd-472b-a7f6-1cbb59713daa",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "f39e23ce-a2b9-4054-b1a6-331ecd334990",
              "parentUUID": "261f19a9-bacd-472b-a7f6-1cbb59713daa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 4265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'height' with the value '40px', but the value was '41px'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'height' with the value '40px', but the value was '41px'\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d24bbecf-5b74-439e-ba99-f1a6065b9abb",
              "parentUUID": "261f19a9-bacd-472b-a7f6-1cbb59713daa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f39e23ce-a2b9-4054-b1a6-331ecd334990"
          ],
          "failures": [
            "d24bbecf-5b74-439e-ba99-f1a6065b9abb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24f844c6-9155-48ac-b8f1-43f8dc8a7691",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4514e01e-9798-4e94-b173-7498d8acb4f3",
              "parentUUID": "24f844c6-9155-48ac-b8f1-43f8dc8a7691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "53a42316-76ec-4428-bb32-4fdb1346f228",
              "parentUUID": "24f844c6-9155-48ac-b8f1-43f8dc8a7691",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4514e01e-9798-4e94-b173-7498d8acb4f3",
            "53a42316-76ec-4428-bb32-4fdb1346f228"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 264,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7665b14-6fb7-4e92-add4-d41872faf1da",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "1ebd5cf2-67a0-464c-be68-710aaa45ddcd",
              "parentUUID": "a7665b14-6fb7-4e92-add4-d41872faf1da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "b368da00-02ee-43dd-a2d6-55f7b43fa63b",
              "parentUUID": "a7665b14-6fb7-4e92-add4-d41872faf1da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ebd5cf2-67a0-464c-be68-710aaa45ddcd",
            "b368da00-02ee-43dd-a2d6-55f7b43fa63b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a83f73d2-f642-4e39-881f-30a71f1d73d2",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "8ba7df9b-1bf1-41a5-a1f6-555e0c61706f",
              "parentUUID": "a83f73d2-f642-4e39-881f-30a71f1d73d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "88629a55-9ac3-4d60-8aed-5aa90f69c103",
              "parentUUID": "a83f73d2-f642-4e39-881f-30a71f1d73d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "489ba478-32a4-4200-b651-50c4d73a3610",
              "parentUUID": "a83f73d2-f642-4e39-881f-30a71f1d73d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ba7df9b-1bf1-41a5-a1f6-555e0c61706f",
            "88629a55-9ac3-4d60-8aed-5aa90f69c103",
            "489ba478-32a4-4200-b651-50c4d73a3610"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af0efcba-b224-4973-b359-2f6fa2171cde",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "c2963d28-c0ca-4574-aebf-79ffd4b5724e",
              "parentUUID": "af0efcba-b224-4973-b359-2f6fa2171cde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "e9e17e14-084e-47d4-9b00-13c9485f41ec",
              "parentUUID": "af0efcba-b224-4973-b359-2f6fa2171cde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ca43273f-2b82-4b48-b40b-1222653c99a4",
              "parentUUID": "af0efcba-b224-4973-b359-2f6fa2171cde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "7e9d29a6-49dd-4655-be44-397d5e26f815",
              "parentUUID": "af0efcba-b224-4973-b359-2f6fa2171cde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2963d28-c0ca-4574-aebf-79ffd4b5724e",
            "e9e17e14-084e-47d4-9b00-13c9485f41ec",
            "ca43273f-2b82-4b48-b40b-1222653c99a4",
            "7e9d29a6-49dd-4655-be44-397d5e26f815"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "c56ec8c8-5354-4159-8b50-20bebd7d149e",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "0d774c6e-3a4e-4aa6-a110-e8b7204d10a2",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8d17438f-66ab-4ecd-96f4-3894b4aca982",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.",
                "estack": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "76980021-d870-4349-8d36-d0a416fbbb8c",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d8794428-0d3e-40f5-b7b8-d338aa7a5546",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "23e48550-3808-42d2-a7fb-7c85850cd162",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:36889/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36889/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36889/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36889/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36889/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36889/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36889/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a67c56b9-807e-45e7-80e9-33c6409cc195",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4643,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3b4e4bdf-b20e-4470-8f51-127217c6c908",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4658,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "46bb69a9-5f21-4a09-a8ee-2f551f09e66a",
              "parentUUID": "6b077d5e-c3fa-4f73-82ed-a83629ad228d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c56ec8c8-5354-4159-8b50-20bebd7d149e",
            "0d774c6e-3a4e-4aa6-a110-e8b7204d10a2",
            "d8794428-0d3e-40f5-b7b8-d338aa7a5546",
            "23e48550-3808-42d2-a7fb-7c85850cd162"
          ],
          "failures": [
            "8d17438f-66ab-4ecd-96f4-3894b4aca982",
            "76980021-d870-4349-8d36-d0a416fbbb8c",
            "a67c56b9-807e-45e7-80e9-33c6409cc195",
            "3b4e4bdf-b20e-4470-8f51-127217c6c908",
            "46bb69a9-5f21-4a09-a8ee-2f551f09e66a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18889,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0802a7de-5b88-4c90-b69b-ab54d42e378f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4752,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "08c5e193-84f5-4aa0-bbbe-104d0b4eb906",
              "parentUUID": "0802a7de-5b88-4c90-b69b-ab54d42e378f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f83ddbf3-0d83-442a-9a37-f3cce04b2840",
              "parentUUID": "0802a7de-5b88-4c90-b69b-ab54d42e378f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4627,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:36889/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:36889/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:36889/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:36889/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:36889/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:36889/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "df22e08c-674f-4644-b399-68367b800fe8",
              "parentUUID": "0802a7de-5b88-4c90-b69b-ab54d42e378f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f83ddbf3-0d83-442a-9a37-f3cce04b2840"
          ],
          "failures": [
            "08c5e193-84f5-4aa0-bbbe-104d0b4eb906",
            "df22e08c-674f-4644-b399-68367b800fe8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9854,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8b58a106-2844-4677-8d57-836d9ad49873",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 355,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36889/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36889/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36889/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36889/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36889/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36889/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36889/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5c939180-1dcf-4b33-a184-8f2805be53ea",
              "parentUUID": "8b58a106-2844-4677-8d57-836d9ad49873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:36889/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:36889/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:36889/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:36889/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:36889/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:36889/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:36889/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:36889/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:36889/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:36889/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:36889/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:36889/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7b51e8c7-15bf-49be-8cc3-8dd2d55b0bc4",
              "parentUUID": "8b58a106-2844-4677-8d57-836d9ad49873",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5c939180-1dcf-4b33-a184-8f2805be53ea",
            "7b51e8c7-15bf-49be-8cc3-8dd2d55b0bc4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}